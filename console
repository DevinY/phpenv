#!/bin/bash
if [ ! -f .env ];then
    echo "dot env file is required."
    exit
fi
export CPU=$(uname -m)
source .env
source .functions.sh

if [[ "$1" = 'info' && "$2" = 'all' ]];then
    shift 2
    . ./all
    exit
fi

if [[ "$1" = 'info' && "$2" = 'ports' ]];then
    shift 2
    ./ports
    exit
fi

if [[ "$1" = 'all' ]];then
    shift 1
    . ./all
    exit
fi

if [ "$1" = 'info' ];then
    . ./info
    exit
fi

if [ "$1" = 'stop' ];then
    shift 1
    . ./stop $2
    exit
fi

if [ "$1" = 'start' ];then
    shift 1
    . ./start
    exit
fi

if [ "$1" = 'link' ];then
    shift 1
    . ./link
    exit
fi
#reload nginx
if [ "$1" = 'reload' ];then
    . ./reload
    exit
fi

#執行容器內的命令
if [ "$1" = 'artisan' ];then
    docker-compose -p ${PROJECT} exec php php $@
    exit 0
fi

#Default Workspace
if [ "$1" = '' ];then
    exec_bash $(get_workspace)
    exit
fi

#進入ssh容器
if [ "$1" = 'ssh' ];then
    exec_bash $1
fi

#進入Drive容器
if [ "$1" = 'drive' ];then
    exec_bash $1 public
fi

#檢測是否為.env名稱，如果是就進入
if [ "$1" ];then
    if [ -f envs/$1 ];then
            #重新連結並進入容器
            ln -sf envs/${1} .env
            PROJECT=$(get_project)
            echo "Link to Project of "${PROJECT}
            shift 1
            echo "Entering service $(get_workspace) as workspace"
            console exec $(get_workspace) bash
        exit
    fi
fi
echo $CPU
console $@
